{"version":3,"sources":["angular-minimodal.coffee"],"names":[],"mappings":"CAAA,WAAA,QAAQ,OAAO,wBAAyB,SAAS,SAAU,WAE1D,KAAK,MAAQ,QAAS,KAAM,cAAe,WAAY,aAAc,SAAC,MAAO,GAAI,YAAa,SAAU,YAEvG,GAAA,gBAAA,UAAW,SAAC,YACX,OAAM,IAAI,MAAM,KAAK,SAAC,UACrB,GAAwB,MAArB,SAAS,OACX,KAAU,IAAA,OAAM,+BAAiC,KAAO,IACzD,OAAO,SAAQ,QAAQ,SAAS,SAElC,QAAQ,OAAO,MAEd,KAAM,SAAC,SAEN,GAAA,UAAA,gBAAA,QA6BA,OA7BA,UAAW,GAAG,QACd,UACC,QAAS,SAAC,SACT,UAAS,QAAQ,IAClB,OAAQ,SAAC,SACR,UAAS,OAAO,IACjB,OAAQ,SAAS,SAElB,gBAAkB,SAAS,QAAQ,aACnC,gBAAgB,KAAK,SAAC,OAErB,GAAA,YAAA,aAAA,UAAS,KAAK,YAAY,MAAM,IAE7B,QAAQ,aACV,QACC,OAAQ,QAAQ,QAAU,WAAW,OACrC,eAAgB,UAEjB,WAAa,YAAY,QAAQ,WAAY,QAC7C,MAAM,KAAK,0BAA2B,YACtC,MAAM,WAAW,KAAK,0BAA2B,aAElD,SAAS,OAAO,OAAO,QACvB,MAAM,GAAG,YAET,SAAS,QAAQ,WAAQ,iBACxB,OAAM,GAAG,QACT,MAAM,aAED","file":"angular-minimodal-latest.min.js","sourcesContent":["angular.module(\"angular-minimodal\", []).provider \"$modal\", ->\n\n\tthis.$get = [\"$http\", \"$q\", \"$controller\", \"$compile\", \"$rootScope\", ($http, $q, $controller, $compile, $rootScope)->\n\n\t\tgetModal = (path)->\n\t\t\t$http.get(path).then (response)->\n\t\t\t\tif response.status isnt 200\n\t\t\t\t\tthrow new Error \"$modal could not find path '\" + path + \"'\"\n\t\t\t\treturn angular.element response.data\n\n\t\tangular.extend @, {\n\n\t\t\tshow: (options)->\n\n\t\t\t\tdeferred = $q.defer()\n\t\t\t\tinstance =\n\t\t\t\t\tresolve: (v)->\n\t\t\t\t\t\tdeferred.resolve v\n\t\t\t\t\treject: (v)->\n\t\t\t\t\t\tdeferred.reject v\n\t\t\t\t\tresult: deferred.promise\n\n\t\t\t\tgetModalPromise = getModal options.templateUrl\n\t\t\t\tgetModalPromise.then (modal)->\n\n\t\t\t\t\tdocument.body.appendChild modal[0]\n\n\t\t\t\t\tif(options.controller)\n\t\t\t\t\t\tlocals =\n\t\t\t\t\t\t\t$scope: options.$scope || $rootScope.$new()\n\t\t\t\t\t\t\t$modalInstance: instance\n\n\t\t\t\t\t\tcontroller = $controller options.controller, locals\n\t\t\t\t\t\tmodal.data \"$ngControllerController\", controller\n\t\t\t\t\t\tmodal.children().data \"$ngControllerController\", controller\n\n\t\t\t\t\t$compile(modal) locals.$scope\n\t\t\t\t\tmodal[0].showModal()\n\n\t\t\t\t\tdeferred.promise.finally ->\n\t\t\t\t\t\tmodal[0].close()\n\t\t\t\t\t\tmodal.remove()\n\n\t\t\t\treturn instance\n\n\t\t}\n\n\t]\n\treturn"],"sourceRoot":"src"}