{"version":3,"sources":["angular-minimodal.coffee"],"names":[],"mappings":"CAAA,WAAA,QAAQ,OAAO,wBAAyB,SAAS,SAAU,WAE1D,KAAK,MAAQ,QAAS,KAAM,cAAe,WAAY,aAAc,SAAC,MAAO,GAAI,YAAa,SAAU,YAEvG,GAAA,gBAAA,eAAA,UAAW,SAAC,YACX,OAAM,IAAI,MAAM,KAAK,SAAC,UACrB,GAAwB,MAArB,SAAS,OACX,KAAU,IAAA,OAAM,+BAAiC,KAAO,IACzD,OAAO,SAAQ,QAAQ,SAAS,SAElC,gBACC,eAAe,GAEhB,QAAQ,OAAO,MAEd,KAAM,SAAC,SACN,GAAA,UAAA,gBAAA,QAEA,IAFA,QAAU,QAAQ,OAAO,eAAgB,SAElC,MAAA,QACN,KAAU,IAAA,OAAM,yCAEjB,IAAmC,gBAAhC,SAAe,YACjB,KAAU,IAAA,OAAM,wCAsCjB,OApCA,UAAW,GAAG,QACd,UACC,QAAS,SAAC,SACT,UAAS,QAAQ,IAClB,OAAQ,SAAC,SACR,UAAS,OAAO,IACjB,OAAQ,SAAS,SAElB,gBAAkB,SAAS,QAAQ,aACnC,gBAAgB,KAAK,SAAC,QACrB,GAAA,YAAA,OAAA,YAAA,OAAQ,OAAO,GACf,SAAS,KAAK,YAAY,OAEvB,QAAQ,aACV,QACC,OAAQ,QAAQ,QAAU,WAAW,OACrC,eAAgB,UAEjB,WAAa,YAAY,QAAQ,WAAY,QAC7C,OAAO,KAAK,0BAA2B,YACvC,OAAO,WAAW,KAAK,0BAA2B,aAEnD,SAAS,QAAQ,OAAO,QAErB,QAAQ,gBACV,MAAM,SAAW,iBAChB,UAAS,WAER,MAAA,MAAA,WACF,MAAM,YAEP,SAAS,QAAQ,WAAQ,iBACrB,OAAA,MAAA,OACF,MAAM,QACP,OAAO,aAEF","file":"angular-minimodal-latest.min.js","sourcesContent":["angular.module(\"angular-minimodal\", []).provider \"$modal\", ->\n\n\tthis.$get = [\"$http\", \"$q\", \"$controller\", \"$compile\", \"$rootScope\", ($http, $q, $controller, $compile, $rootScope)->\n\n\t\tgetModal = (path)->\n\t\t\t$http.get(path).then (response)->\n\t\t\t\tif response.status isnt 200\n\t\t\t\t\tthrow new Error \"$modal could not find path '\" + path + \"'\"\n\t\t\t\treturn angular.element response.data\n\n\t\tdefaultOptions =\n\t\t\tdismissEscape: true\n\n\t\tangular.extend @, {\n\n\t\t\tshow: (options)->\n\t\t\t\toptions = angular.extend defaultOptions, options\n\n\t\t\t\tif not options?\n\t\t\t\t\tthrow new Error \"angular-minimodal: No options provided\"\n\n\t\t\t\tif typeof options.templateUrl isnt \"string\"\n\t\t\t\t\tthrow new Error \"angular-minmodal: Invalid templateUrl\"\n\n\t\t\t\tdeferred = $q.defer()\n\t\t\t\tinstance =\n\t\t\t\t\tresolve: (v)->\n\t\t\t\t\t\tdeferred.resolve v\n\t\t\t\t\treject: (v)->\n\t\t\t\t\t\tdeferred.reject v\n\t\t\t\t\tresult: deferred.promise\n\n\t\t\t\tgetModalPromise = getModal options.templateUrl\n\t\t\t\tgetModalPromise.then ($modal)->\n\t\t\t\t\tmodal = $modal[0]\n\t\t\t\t\tdocument.body.appendChild modal\n\n\t\t\t\t\tif(options.controller)\n\t\t\t\t\t\tlocals =\n\t\t\t\t\t\t\t$scope: options.$scope || $rootScope.$new()\n\t\t\t\t\t\t\t$modalInstance: instance\n\n\t\t\t\t\t\tcontroller = $controller options.controller, locals\n\t\t\t\t\t\t$modal.data \"$ngControllerController\", controller\n\t\t\t\t\t\t$modal.children().data \"$ngControllerController\", controller\n\n\t\t\t\t\t$compile($modal) locals.$scope\n\n\t\t\t\t\tif options.dismissEscape\n\t\t\t\t\t\tmodal.oncancel = ->\n\t\t\t\t\t\t\tinstance.reject()\n\n\t\t\t\t\tif modal.showModal?\n\t\t\t\t\t\tmodal.showModal()\n\n\t\t\t\t\tdeferred.promise.finally ->\n\t\t\t\t\t\tif modal.close?\n\t\t\t\t\t\t\tmodal.close()\n\t\t\t\t\t\t$modal.remove()\n\n\t\t\t\treturn instance\n\n\t\t}\n\n\t]\n\treturn"],"sourceRoot":"src"}