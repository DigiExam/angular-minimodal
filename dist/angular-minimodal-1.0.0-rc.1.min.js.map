{"version":3,"sources":["angular-minimodal.js"],"names":[],"mappings":"CAAA,WAGA,YAMA,SAAA,KAAA,QAAA,EAEA,QAAA,KAYA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAYA,QAAA,GAAA,GAEA,GAAA,EACA,KAAA,IAAA,OAAA,mEAKA,IAJA,GAAA,EAEA,EAAA,QAAA,OAAA,EAAA,GAEA,gBAAA,GAAA,YACA,KAAA,IAAA,OAAA,0CAEA,OAAA,GAAA,GACA,KAAA,EAAA,GAAA,QAAA,WAEA,GAAA,IAIA,QAAA,GAAA,GAEA,MAAA,GAAA,EAAA,aACA,KAAA,SAAA,GAEA,MAAA,GAAA,EAAA,KAIA,QAAA,GAAA,GAEA,EAAA,MACA,EAAA,QAGA,QAAA,GAAA,GAEA,EAAA,MACA,EAAA,YAGA,QAAA,KAEA,EAAA,OAAA,GACA,EAAA,GAAA,OAGA,QAAA,GAAA,GAEA,OACA,KAAA,IACA,QAAA,KACA,OAAA,EAAA,QACA,QAAA,SAAA,GAAA,EAAA,QAAA,GAAA,EAAA,OACA,OAAA,SAAA,GAAA,EAAA,OAAA,GAAA,EAAA,OACA,KAAA,WAAA,EAAA,KAAA,UACA,KAAA,WAAA,EAAA,KAAA,WAIA,QAAA,GAAA,GAEA,EAAA,QAAA,WAAA,YAAA,EAAA,SACA,EAAA,QACA,IAGA,QAAA,GAAA,GAEA,IAEA,MAAA,SAAA,QAAA,EAAA,MAEA,MAAA,GAEA,MAAA,GAAA,OAAA,IAIA,QAAA,GAAA,GAEA,GAAA,GAAA,wEACA,QAAA,KAAA,EAAA,QACA,QAAA,KAAA,EAAA,KACA,OAAA,GAAA,OACA,GAAA,OAAA,IAIA,QAAA,GAAA,EAAA,GAEA,GAAA,GAAA,EAAA,EAEA,IAAA,WAAA,EAAA,SACA,MAAA,GAAA,OAAA,GAAA,OAAA,uCAEA,IAAA,GAAA,EAAA,QACA,EAAA,EAAA,EAEA,GAAA,QAAA,CAEA,IAAA,IACA,OAAA,EAAA,QAAA,EAAA,OACA,eAAA,EAGA,IAAA,EAAA,WACA,CACA,GAAA,EAEA,KAEA,EAAA,EAAA,EAAA,WAAA,GAEA,MAAA,GAEA,MAAA,GAAA,OAAA,GAGA,EAAA,KAAA,0BAAA,GACA,EAAA,WAAA,KAAA,0BAAA,GAWA,MARA,GAAA,GAAA,EAAA,YAEA,EAAA,gBACA,EAAA,SAAA,WAAA,EAAA,WAEA,SAAA,KAAA,YAAA,GACA,EAAA,QAAA,GAEA,EAGA,QAAA,GAAA,GAQA,MANA,QAAA,GAAA,GAAA,GACA,EAAA,OAEA,EAAA,EACA,EAAA,OAEA,EAGA,QAAA,GAAA,GAIA,MAFA,GAAA,KACA,IACA,EAAA,OAAA,GAGA,QAAA,GAAA,GAEA,GAAA,GAAA,EAAA,QACA,EAAA,EAAA,QACA,EAAA,EAAA,IAAA,EAMA,OALA,gBAAA,IAAA,EAAA,OAAA,EACA,EAAA,QAAA,QAAA,QAAA,IAEA,EAAA,EAAA,IAAA,GACA,KAAA,EAAA,GACA,EA1KA,QAAA,OAAA,MAAA,KAAA,GAEA,IAAA,IACA,eAAA,GAGA,KACA,EAAA,KACA,GAAA,CAqKA,OAAA,MAzLA,KAAA,MACA,QACA,KACA,cACA,WACA,aACA,iBACA,GAfA,QAAA,OAAA,wBACA,SAAA,SAAA,EAEA,IAAA,GAAA","file":"angular-minimodal-1.0.0-rc.1.min.js","sourcesContent":["(function()\n{\n\t/* global angular */\n\t\"use strict\";\n\n\tangular.module(\"angular-minimodal\", [])\n\t\t.provider(\"$modal\", AngularMiniModalProvider);\n\n\tvar _id = 0;\n\tfunction getId() { return ++_id; }\n\n\tfunction AngularMiniModalProvider()\n\t{\n\t\tthis.$get = [\n\t\t\t\"$http\",\n\t\t\t\"$q\",\n\t\t\t\"$controller\",\n\t\t\t\"$compile\",\n\t\t\t\"$rootScope\",\n\t\t\t\"$templateCache\",\n\t\t\tAngularMiniModal\n\t\t];\n\n\t\tfunction AngularMiniModal($http, $q, $controller, $compile, $rootScope, $templateCache)\n\t\t{\n\t\t\tangular.extend(this, { show: show });\n\n\t\t\tvar defaultOptions = {\n\t\t\t\tdismissEscape: true\n\t\t\t};\n\n\t\t\tvar _instances = [];\n\t\t\tvar _currentActiveInstance = null;\n\t\t\tvar _hasPendingModal = false;\n\n\t\t\tfunction show(options)\n\t\t\t{\n\t\t\t\tif(_hasPendingModal)\n\t\t\t\t\tthrow new Error(\"angular-minimodal: Can't open new modal when a modal is pending.\");\n\t\t\t\t_hasPendingModal = true;\n\n\t\t\t\toptions = angular.extend(defaultOptions, options);\n\n\t\t\t\tif(typeof(options.templateUrl) !== \"string\")\n\t\t\t\t\tthrow new Error(\"angular-minimodal: Invalid templateUrl.\");\n\n\t\t\t\treturn create(options)\n\t\t\t\t\t.then(onCreateModalSuccess, onCreateModalFail).finally(function()\n\t\t\t\t\t{\n\t\t\t\t\t\t_hasPendingModal = false;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction create(options)\n\t\t\t{\n\t\t\t\treturn getModalTemplate(options.templateUrl)\n\t\t\t\t\t.then(function(modal)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn onRequestModalTemplateSuccess(options, modal);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction hideModal(modal)\n\t\t\t{\n\t\t\t\tif(modal.open)\n\t\t\t\t\tmodal.close();\n\t\t\t}\n\n\t\t\tfunction showModal(modal)\n\t\t\t{\n\t\t\t\tif(!modal.open)\n\t\t\t\t\tmodal.showModal();\n\t\t\t}\n\n\t\t\tfunction showPreviousModalIfExists()\n\t\t\t{\n\t\t\t\tif(_instances.length > 0)\n\t\t\t\t\t_instances[0].show();\n\t\t\t}\n\n\t\t\tfunction createInstance(deferred)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t$$id: getId(),\n\t\t\t\t\t$$modal: null,\n\t\t\t\t\tresult: deferred.promise,\n\t\t\t\t\tresolve: function(v) { deferred.resolve(v); onModalClose(this); },\n\t\t\t\t\treject: function(v) { deferred.reject(v); onModalClose(this); },\n\t\t\t\t\thide: function() { hideModal(this.$$modal); },\n\t\t\t\t\tshow: function() { showModal(this.$$modal); }\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfunction onModalClose(instance)\n\t\t\t{\n\t\t\t\tinstance.$$modal.parentNode.removeChild(instance.$$modal);\n\t\t\t\t_instances.shift();\n\t\t\t\tshowPreviousModalIfExists();\n\t\t\t}\n\n\t\t\tfunction onGetModalTemplateSuccess(response)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treturn angular.element(response.data);\n\t\t\t\t}\n\t\t\t\tcatch(ex)\n\t\t\t\t{\n\t\t\t\t\treturn $q.reject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onGetModalTemplateFail(response)\n\t\t\t{\n\t\t\t\tvar e = 'angular-minimodal: Could not load template. Server responded %s \"%d\".'\n\t\t\t\t\t.replace(\"%s\", response.status)\n\t\t\t\t\t.replace(\"%d\", response.data);\n\t\t\t\treturn $q.reject(\n\t\t\t\t\tnew Error(e)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfunction onRequestModalTemplateSuccess(options, $modal)\n\t\t\t{\n\t\t\t\tvar modal = $modal[0];\n\n\t\t\t\tif(modal.nodeName !== \"DIALOG\")\n\t\t\t\t\treturn $q.reject(new Error(\"angular-minimodal: Faulty template.\"));\n\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tvar instance = createInstance(deferred);\n\n\t\t\t\tinstance.$$modal = modal;\n\n\t\t\t\tvar locals = {\n\t\t\t\t\t$scope: options.$scope || $rootScope.$new(),\n\t\t\t\t\t$modalInstance: instance\n\t\t\t\t};\n\n\t\t\t\tif(options.controller)\n\t\t\t\t{\n\t\t\t\t\tvar controller;\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller = $controller(options.controller, locals);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(ex)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $q.reject(ex);\n\t\t\t\t\t}\n\n\t\t\t\t\t$modal.data(\"$ngControllerController\", controller);\n\t\t\t\t\t$modal.children().data(\"$ngControllerController\", controller);\n\t\t\t\t}\n\n\t\t\t\t$compile(modal)(locals.$scope || {});\n\n\t\t\t\tif(options.dismissEscape)\n\t\t\t\t\tmodal.oncancel = function() { instance.reject(); };\n\n\t\t\t\tdocument.body.appendChild(modal);\n\t\t\t\t_instances.unshift(instance);\n\n\t\t\t\treturn instance;\n\t\t\t}\n\n\t\t\tfunction onCreateModalSuccess(instance)\n\t\t\t{\n\t\t\t\tif(_currentActiveInstance !== null && _currentActiveInstance != instance)\n\t\t\t\t\t_currentActiveInstance.hide();\n\n\t\t\t\t_currentActiveInstance = instance;\n\t\t\t\tinstance.show();\n\n\t\t\t\treturn instance;\n\t\t\t}\n\n\t\t\tfunction onCreateModalFail(ex)\n\t\t\t{\n\t\t\t\t_currentActiveInstance = null;\n\t\t\t\tshowPreviousModalIfExists();\n\t\t\t\treturn $q.reject(ex);\n\t\t\t}\n\n\t\t\tfunction getModalTemplate(path)\n\t\t\t{\n\t\t\t\tvar deferred = $q.defer(),\n\t\t\t\t\tpromise = deferred.promise,\n\t\t\t\t\tcacheData = $templateCache.get(path);\n\t\t\t\tif(typeof(cacheData) === \"string\" && cacheData.length > 0)\n\t\t\t\t\tdeferred.resolve(angular.element(cacheData));\n\t\t\t\telse\n\t\t\t\t\tpromise = $http.get(path)\n\t\t\t\t\t\t.then(onGetModalTemplateSuccess, onGetModalTemplateFail);\n\t\t\t\treturn promise;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t}\n}());"],"sourceRoot":"src"}